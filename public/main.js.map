{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/search.pipe.ts","webpack:///./src/app/admin/user.component.html","webpack:///./src/app/admin/user.component.ts","webpack:///./src/app/admin/user.form.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.model.ts","webpack:///./src/app/navigation/nav.component.html","webpack:///./src/app/navigation/nav.component.ts","webpack:///./src/app/notfound/notfound.component.css","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/app/services/contacts.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/app/user/contact.component.html","webpack:///./src/app/user/contact.component.ts","webpack:///./src/app/user/contact.form.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\nimport { UserModel } from '../model/users.model';\n\n@Pipe({\n    name: 'search'\n})\n\nexport class SearchPipe implements PipeTransform{\n    transform( value: UserModel[], keyword: string ){\n        keyword = keyword ? keyword.toLowerCase() : null;\n        return keyword ? value.filter((user: UserModel)=>(\n            ((user.firstname.toLowerCase().indexOf(keyword) !== -1) || \n            (user.lastname.toLowerCase().indexOf(keyword) !== -1) ||\n            (user.user_role.toLowerCase().indexOf(keyword) !== -1)\n            )\n        )) : value;\n    }\n}","module.exports = \"<navigation></navigation>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\" style=\\\"margin-top:5%\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <nav aria-label=\\\"breadcrumb\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n              <li class=\\\"breadcrumb-item\\\"><a href=\\\"#\\\">Home</a></li>\\n              <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Manage User(s)</li>\\n            </ol>\\n          </nav>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">Manage User(s)</div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"card extra-padding\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8\\\">\\n                  <label for=\\\"keyword\\\">Keyword:</label>\\n                  <input [(ngModel)]=\\\"keyword\\\" style=\\\"width:200px; display:inline-block;\\\" placeholder=\\\"Name | Type\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"keyword\\\" />\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <button (click)=\\\"openModal('add-new')\\\" type=\\\"button\\\" class=\\\"btn btn-outline-secondary float-right\\\" >\\n                      <i class=\\\"fa fa-user-plus\\\"></i> Add New\\n                    </button>\\n                </div>\\n              </div>\\n            </div>\\n            <br />\\n            <table class=\\\"table table-bordered\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Name</th>\\n                    <th>Email</th>\\n                    <th>Username</th>\\n                    <th>Phone</th>\\n                    <th>User Type</th>\\n                    <th>Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let user of users | search:keyword\\\">\\n                    <td>{{user.firstname}} {{user.lastname}}</td>\\n                    <td>{{user.email}}</td>\\n                    <td>{{user.username}}</td>\\n                    <td>{{user.phone}}</td>\\n                    <td>{{user.user_role | uppercase}}</td>\\n                    <td>\\n                      <a class=\\\"user-icons\\\" (click)=\\\"updateUser(user._id)\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n                      <a class=\\\"user-icons\\\" (click)=\\\"deleteUser(user._id)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    </div>\\n</div>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n        <form class=\\\"form-horizontal\\\"\\n          novalidate\\n          (ngSubmit)=\\\"save(formMode)\\\"\\n          [formGroup]=\\\"userForm\\\">  \\n\\n          <input id=\\\"userId\\\" type=\\\"hidden\\\" value=\\\"\\\" formControlName=\\\"userId\\\"/>\\n\\n          <!-- Firstname field code starts here -->\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (userForm.get('firstName').touched ||\\n                                                            userForm.get('firstName').dirty) &&\\n                                                            !userForm.get('firstName').valid}\\\">\\n            <label class=\\\"col-md-2 control-label\\\"\\n                for=\\\"fname\\\">FirstName</label>\\n            <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                    id=\\\"fname\\\"\\n                    type=\\\"text\\\"\\n                    placeholder=\\\"First Name\\\"\\n                    formControlName=\\\"firstName\\\"/>\\n                <span class=\\\"help-block\\\" *ngIf=\\\"(userForm.get('firstName').touched ||\\n                                                userForm.get('firstName').dirty) &&\\n                                                userForm.get('firstName').errors\\\">\\n\\n                    <span *ngIf=\\\"userForm.get('firstName').errors.required\\\">\\n                      Please enter first Name\\n                    </span>\\n                    <span *ngIf=\\\"userForm.get('firstName').errors.minlength\\\">\\n                        Min Length is 3\\n                    </span>\\n                </span>\\n            </div>\\n          </div>\\n          <!-- Firstname field code ends here -->\\n\\n          <!-- Lastname field code starts here -->\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (userForm.get('lastName').touched ||\\n                                                            userForm.get('lastName').dirty) &&\\n                                                            !userForm.get('lastName').valid}\\\">\\n            <label class=\\\"col-md-2 control-label\\\" for=\\\"lname\\\">Last Name</label>\\n            <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                    id=\\\"lname\\\"\\n                    type=\\\"text\\\"\\n                    placeholder=\\\"Last Name\\\"\\n                    formControlName=\\\"lastName\\\"/>\\n                <span class=\\\"help-block\\\" *ngIf=\\\"(userForm.get('lastName').touched ||\\n                                                userForm.get('lastName').dirty) &&\\n                                                userForm.get('lastName').errors\\\">\\n\\n                    <span *ngIf=\\\"userForm.get('lastName').errors.required\\\">\\n                      Please enter first Name\\n                    </span>\\n                    <span *ngIf=\\\"userForm.get('lastName').errors.minlength\\\">\\n                        Min Length should be at least 3\\n                    </span>\\n                </span>\\n            </div>\\n          </div>\\n          <!-- Lastname field code starts here -->\\n\\n          <!-- Email field code starts here -->\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-2 control-label\\\" for=\\\"username\\\">Username</label>\\n            <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                    id=\\\"username\\\"\\n                    type=\\\"text\\\"\\n                    placeholder=\\\"Username\\\"\\n                    formControlName=\\\"username\\\"/>\\n            </div>\\n          </div>\\n          <!-- Email field code starts here -->\\n\\n          <!-- Email field code starts here -->\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-2 control-label\\\" for=\\\"password\\\">Password</label>\\n            <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                    id=\\\"password\\\"\\n                    type=\\\"password\\\"\\n                    placeholder=\\\"\\\"\\n                    formControlName=\\\"password\\\"/>\\n            </div>\\n          </div>\\n          <!-- Email field code starts here -->\\n\\n          <!-- Email field code starts here -->\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-2 control-label\\\" for=\\\"email\\\">Email Address</label>\\n            <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                    id=\\\"email\\\"\\n                    type=\\\"text\\\"\\n                    placeholder=\\\"Email Address\\\"\\n                    formControlName=\\\"email\\\"/>\\n            </div>\\n          </div>\\n          <!-- Email field code starts here -->\\n\\n          <!-- Phone field code starts here -->\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-2 control-label\\\" for=\\\"phone\\\">Phone</label>\\n            <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                    id=\\\"phone\\\"\\n                    type=\\\"text\\\"\\n                    placeholder=\\\"+91 98765 28433\\\"\\n                    formControlName=\\\"phone\\\"/>\\n            </div>\\n          </div>\\n          <!-- Phone field code starts here -->\\n\\n          <!-- Image url field code starts here -->\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-2 control-label\\\" for=\\\"user_role\\\">User Type</label>\\n            <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                    id=\\\"user_role\\\"\\n                    type=\\\"text\\\"\\n                    placeholder=\\\"User Type\\\"\\n                    formControlName=\\\"user_role\\\"/>\\n            </div>\\n          </div>\\n          <!-- Image url field code starts here -->\\n            \\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4 col-md-offset-2\\\">\\n              <span>\\n                <button class=\\\"btn btn-secondary\\\"\\n                      type=\\\"submit\\\"\\n                      [disabled]=\\\"!userForm.valid\\\">\\n                    Submit\\n                </button>\\n              </span>\\n            </div>\\n          </div>\\n        </form>\\n        </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"loading\\\" class=\\\"loader-container\\\"><div class=\\\"loader\\\"></div></div>\"","import { Component } from '@angular/core';\nimport { UserService } from '../services/users.service';\nimport { UserModel } from '../model/users.model';\nimport { User } from './user.form';\nimport { Router } from '@angular/router';\n\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl} from '@angular/forms';\n\ndeclare var $: any;\n\n@Component({\n    selector: 'manage-users',\n    templateUrl: './user.component.html'\n})\n\nexport class UserComponent{\n\n    constructor( private _userService: UserService,  private fb: FormBuilder, private _router: Router ){}\n\n    title: String = 'User(s) Manager';\n    users: UserModel[];\n    loading: boolean = true;\n    userForm: FormGroup;\n    user: User = new User();\n    isUserDetailEnabled: boolean = false;\n    userDetail: UserModel;\n    formMode: String = 'INSERT';\n    keyword: String;\n    modalTitle: string;\n    isAdmin:boolean = false;\n    openModal( modelFor ){\n        this.modalTitle = (modelFor == 'update' ) ? \"Update User\" : \"Add New User\";\n        this.formMode = (modelFor == 'update' ) ? \"UPDATE\" : \"INSERT\";\n        if(this.formMode == 'INSERT'){\n            this.loadFormWithValues({});\n        }\n        $('#myModal').modal('show'); \n        return false;\n    }\n\n    closeModal(){\n        $('#myModal').modal('hide'); \n        return false;\n    }\n\n    loadUserDeatil( userId ): void{\n        console.log(userId);\n        this.loading = true;\n        this._userService.getUser(userId).subscribe((data)=>{\n            this.userDetail = data;\n            this.isUserDetailEnabled = true;\n            this.loading = false;\n        });\n        \n    }\n\n    updateUser(userId){\n        console.log(userId);\n        this.loading = true;\n        this._userService.getUser(userId).subscribe((data)=>{\n            this.loadFormWithValues(data);\n            this.openModal('update');\n            this.loading = false;\n        });\n        return false;\n    }\n\n    deleteUser( userId ){\n        if(confirm(\"Are you sure to delete user?\")) {\n            this._userService.deleteUser(userId).subscribe((data)=>{\n                this.getUsers();\n                this.isUserDetailEnabled = false;\n            });\n        }        \n        return false;\n    }\n\n    update(){\n        this.loading = true;\n        this._userService.updateUser({\n            '_id': this.userForm.value.userId,\n            'firstname': this.userForm.value.firstName,\n            'lastname': this.userForm.value.lastName,\n            'username': this.userForm.value.username,\n            'email': this.userForm.value.email,\n            'phone' : this.userForm.value.phone,\n            'password': this.userForm.value.password,\n            'user_role': this.userForm.value.user_role,\n            'created_on': new Date(),\n            'last_modified': new Date()\n        }, this.userForm.value.userId).subscribe((data)=>{ \n            this.closeModal();\n            this.userDetail = data;\n            this.getUsers();\n        });\n        return false;\n    }\n\n    save( mode ){\n        if(mode == 'UPDATE'){\n            this.update();\n        } else {\n            this.loading = true;\n            this._userService.createUser({\n                '_id': this.userForm.value.userId,\n                'firstname': this.userForm.value.firstName,\n                'lastname': this.userForm.value.lastName,\n                'username': this.userForm.value.username,\n                'email': this.userForm.value.email,\n                'phone' : this.userForm.value.phone,\n                'password': this.userForm.value.password,\n                'user_role': this.userForm.value.user_role,\n                'created_on': new Date(),\n                'last_modified': new Date()\n            }).subscribe((data)=>{ \n                console.log(data); \n                this.closeModal();\n                this.getUsers();\n                this.loading = false;\n            });\n        }\n        return false;\n    }\n\n    getUsers(){\n        this.loading = true;\n        this._userService.getUsers().subscribe((data)=>{\n            console.log(data);\n            this.users = data; \n            this.loading = false;\n        });\n    }\n\n    loadFormWithValues(data: any){\n        this.userForm.patchValue({\n            userId: data._id,\n            firstName: data.firstname,\n            lastName: data.lastname,\n            email: data.email,\n            phone: data.phone,\n            about: data.about,\n            imageUrl: data.image_url\n        });\n        return false;\n    }\n\n    ngOnInit(): void{\n\n        if (localStorage.length > 0) {\n            let isAuth = JSON.parse(localStorage.getItem('auth'));\n            if(isAuth){\n                if(isAuth.type == 'user'){ this._router.navigate(['/contacts']); }\n            }\n        }\n\n        this.getUsers();\n        \n        this.userForm = this.fb.group({\n            userId: [''],\n            firstName : ['', [Validators.required, Validators.minLength(3)]],\n            lastName: ['', [Validators.required, Validators.maxLength(10)]],\n            username: [''],\n            email: [''],\n            phone: [''],\n            user_role: [''],\n            password: ['']\n            \n        });\n    }\n\n}","export class User {\n    constructor(\n        public userId = '',\n        public firstName = '',\n        public lastName = '',\n        public userName = '',\n        public email = '',\n        public phone = '',\n        public userRole = '',\n        public password = ''\n    ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { ContactComponent } from './user/contact.component';\nimport { UserComponent } from './admin/user.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\n\nconst routes: Routes = [\n  { path: 'login', component: AuthComponent },\n  { path: 'contacts', component: ContactComponent },\n  { path: 'manage-user', component: UserComponent },\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: '**', component: NotfoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'project';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AuthComponent } from './auth/auth.component';\nimport { NotfoundComponent } from './notfound/notfound.component';\nimport { ContactComponent } from './user/contact.component';\nimport { UserComponent } from './admin/user.component';\nimport { NavComponent } from './navigation/nav.component';\n\nimport { UserService } from './services/users.service';\nimport { ContactService } from './services/contacts.service';\n\nimport { SearchPipe } from './admin/search.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    ContactComponent,\n    UserComponent,\n    NavComponent,\n    NotfoundComponent,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    UserService,\n    ContactService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-top:10%\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            Login\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n            <form novalidate \\n                    (ngSubmit)=\\\"save(form)\\\"\\n                    [formGroup]=\\\"loginForm\\\">\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (loginForm.get('username').touched ||\\n                loginForm.get('username').dirty) &&\\n                !loginForm.get('username').valid}\\\">\\n                    <label for=\\\"username\\\">Username:</label>\\n                    <input placeholder=\\\"Username\\\" formControlName=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\">\\n\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"(loginForm.get('username').touched ||\\n                                            loginForm.get('username').dirty) &&\\n                                            loginForm.get('username').errors\\\">\\n\\n                        <span *ngIf=\\\"loginForm.get('username').errors.required\\\">\\n                        Username can't be empty.\\n                        </span>\\n                        <span *ngIf=\\\"loginForm.get('username').errors.minlength\\\">\\n                            Minimum length should be at least 3 characters.\\n                        </span>\\n                    </span>\\n                </div>\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (loginForm.get('password').touched ||\\n                loginForm.get('password').dirty) &&\\n                !loginForm.get('password').valid}\\\">\\n                    <label for=\\\"password\\\">Password:</label>\\n                    <input placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\">\\n                    <span class=\\\"help-block\\\" *ngIf=\\\"(loginForm.get('password').touched ||\\n                                            loginForm.get('password').dirty) &&\\n                                            loginForm.get('password').errors\\\">\\n\\n                        <span *ngIf=\\\"loginForm.get('password').errors.required\\\">\\n                        Password can't be empty.\\n                        </span>\\n                        <span *ngIf=\\\"loginForm.get('password').errors.minlength\\\">\\n                            Minimum length should be at least 6 characters.\\n                        </span>\\n                    </span>\\n                </div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n            </form> \\n        </div>\\n    </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/users.service';\nimport { FormGroup, FormControl, FormBuilder, Validator, AbstractControl, Validators, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthModel } from './auth.model';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './auth.component.html'\n})\n\nexport class AuthComponent implements OnInit {\n    loginForm: FormGroup;\n    login: AuthModel = new AuthModel();\n\n    constructor(private _userService: UserService, private fb: FormBuilder, private _router: Router){}\n\n    ngOnInit(): void{\n\n        if (localStorage.length > 0) {\n            let isAuth = JSON.parse(localStorage.getItem('auth'));\n            if(isAuth){\n                if(isAuth.type == 'admin'){ this._router.navigate(['/manage-user']); }\n                if(isAuth.type == 'user'){ this._router.navigate(['/contacts']); }\n            }\n        }\n\n        this.loginForm = this.fb.group({\n            username: ['',[Validators.required, Validators.minLength(3)]],\n            password:['',[Validators.required, Validators.minLength(6)]]\n        })\n    }\n\n    save(form: NgForm){\n        let username = this.loginForm.value.username;\n        let password = this.loginForm.value.password;\n        if(username !== '' && password !== ''){\n            this._userService.authenticate(username, password).subscribe((data)=>{\n                if(data.token){\n                    let myObj = { token: data.token, type: data.user.user_role, id : data.user._id };\n                    localStorage.setItem('auth', JSON.stringify(myObj));\n                    window.location.reload();\n                    if(data.user.user_role == 'admin'){ this._router.navigate(['/manage-user']); }\n                    if(data.user.user_role == 'user'){ this._router.navigate(['/contacts']); }\n                } else {\n                    alert('Invalid username or password! try again...');\n                }\n            });\n        }\n        return false;\n    }\n}","export class AuthModel{\n    constructor(\n        public username = '',\n        public password = ''\n    ){}\n}","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n    <ul class=\\\"navbar-nav float-left\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\"><i class=\\\"fa fa-home\\\"></i></a>\\n      </li>\\n      <li *ngIf=\\\"isUser\\\" class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"['/contacts']\\\" class=\\\"nav-link\\\" href=\\\"#\\\">My Contact(s)</a>\\n      </li>\\n      <li *ngIf=\\\"isAdmin\\\" class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"['/manage-user']\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Manage User(s)</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a style=\\\"cursor:pointer;\\\" class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'navigation',\n    templateUrl: './nav.component.html'\n})\n\nexport class NavComponent{\n\n    constructor(private _router: Router){}\n\n    isUser: Boolean = false;\n    isAdmin: Boolean = false;\n\n    logout(){\n        localStorage.clear();\n        this._router.navigate(['/login']);\n    }\n\n    ngOnInit(): void{\n\n        if (localStorage.length > 0) {\n            let isAuth = JSON.parse(localStorage.getItem('auth'));\n            if(isAuth){\n                if(isAuth.type == 'admin'){ this.isAdmin = true; }\n                if(isAuth.type == 'user'){ this.isUser = true; }\n            }\n        }\n\n    }\n}","module.exports = \"#notfound {\\n    position: relative;\\n    height: 100vh;\\n  }\\n  \\n  #notfound .notfound {\\n    position: absolute;\\n    left: 50%;\\n    top: 50%;\\n    transform: translate(-50%, -50%);\\n  }\\n  \\n  .notfound {\\n    max-width: 767px;\\n    width: 100%;\\n    line-height: 1.4;\\n    padding: 0px 15px;\\n  }\\n  \\n  .notfound .notfound-404 {\\n    position: relative;\\n    height: 150px;\\n    line-height: 150px;\\n    margin-bottom: 25px;\\n  }\\n  \\n  .notfound .notfound-404 h1 {\\n    font-family: 'Titillium Web', sans-serif;\\n    font-size: 186px;\\n    font-weight: 900;\\n    margin: 0px;\\n    text-transform: uppercase;\\n    background: url('text.png');\\n    -webkit-background-clip: text;\\n    -webkit-text-fill-color: transparent;\\n    background-size: cover;\\n    background-position: center;\\n  }\\n  \\n  .notfound h2 {\\n    font-family: 'Titillium Web', sans-serif;\\n    font-size: 26px;\\n    font-weight: 700;\\n    margin: 0;\\n  }\\n  \\n  .notfound p {\\n    font-family: 'Montserrat', sans-serif;\\n    font-size: 14px;\\n    font-weight: 500;\\n    margin-bottom: 0px;\\n    text-transform: uppercase;\\n  }\\n  \\n  .notfound a {\\n    font-family: 'Titillium Web', sans-serif;\\n    display: inline-block;\\n    text-transform: uppercase;\\n    color: #fff;\\n    text-decoration: none;\\n    border: none;\\n    background: #5c91fe;\\n    padding: 10px 40px;\\n    font-size: 14px;\\n    font-weight: 700;\\n    border-radius: 1px;\\n    margin-top: 15px;\\n    transition: 0.2s all;\\n  }\\n  \\n  .notfound a:hover {\\n    opacity: 0.8;\\n  }\\n  \\n  @media only screen and (max-width: 767px) {\\n    .notfound .notfound-404 {\\n      height: 110px;\\n      line-height: 110px;\\n    }\\n    .notfound .notfound-404 h1 {\\n      font-size: 120px;\\n    }\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbm90Zm91bmQvbm90Zm91bmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFFBQVE7SUFHQSxnQ0FBZ0M7RUFDMUM7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSx3Q0FBd0M7SUFDeEMsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLDJCQUE0QztJQUM1Qyw2QkFBNkI7SUFDN0Isb0NBQW9DO0lBQ3BDLHNCQUFzQjtJQUN0QiwyQkFBMkI7RUFDN0I7O0VBRUE7SUFDRSx3Q0FBd0M7SUFDeEMsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixTQUFTO0VBQ1g7O0VBRUE7SUFDRSxxQ0FBcUM7SUFDckMsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0Usd0NBQXdDO0lBQ3hDLHFCQUFxQjtJQUNyQix5QkFBeUI7SUFDekIsV0FBVztJQUNYLHFCQUFxQjtJQUNyQixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFFaEIsb0JBQW9CO0VBQ3RCOztFQUVBO0lBQ0UsWUFBWTtFQUNkOztFQUVBO0lBQ0U7TUFDRSxhQUFhO01BQ2Isa0JBQWtCO0lBQ3BCO0lBQ0E7TUFDRSxnQkFBZ0I7SUFDbEI7RUFDRiIsImZpbGUiOiJzcmMvYXBwL25vdGZvdW5kL25vdGZvdW5kLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbm90Zm91bmQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICB9XG4gIFxuICAjbm90Zm91bmQgLm5vdGZvdW5kIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRvcDogNTAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB9XG4gIFxuICAubm90Zm91bmQge1xuICAgIG1heC13aWR0aDogNzY3cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICBwYWRkaW5nOiAwcHggMTVweDtcbiAgfVxuICBcbiAgLm5vdGZvdW5kIC5ub3Rmb3VuZC00MDQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICB9XG4gIFxuICAubm90Zm91bmQgLm5vdGZvdW5kLTQwNCBoMSB7XG4gICAgZm9udC1mYW1pbHk6ICdUaXRpbGxpdW0gV2ViJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE4NnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWcvdGV4dC5wbmcnKTtcbiAgICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogdGV4dDtcbiAgICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5ub3Rmb3VuZCBoMiB7XG4gICAgZm9udC1mYW1pbHk6ICdUaXRpbGxpdW0gV2ViJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDI2cHg7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBtYXJnaW46IDA7XG4gIH1cbiAgXG4gIC5ub3Rmb3VuZCBwIHtcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG4gIFxuICAubm90Zm91bmQgYSB7XG4gICAgZm9udC1mYW1pbHk6ICdUaXRpbGxpdW0gV2ViJywgc2Fucy1zZXJpZjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQ6ICM1YzkxZmU7XG4gICAgcGFkZGluZzogMTBweCA0MHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogMC4ycyBhbGw7XG4gICAgdHJhbnNpdGlvbjogMC4ycyBhbGw7XG4gIH1cbiAgXG4gIC5ub3Rmb3VuZCBhOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAwLjg7XG4gIH1cbiAgXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAubm90Zm91bmQgLm5vdGZvdW5kLTQwNCB7XG4gICAgICBoZWlnaHQ6IDExMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDExMHB4O1xuICAgIH1cbiAgICAubm90Zm91bmQgLm5vdGZvdW5kLTQwNCBoMSB7XG4gICAgICBmb250LXNpemU6IDEyMHB4O1xuICAgIH1cbiAgfVxuICAiXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div id=\\\"notfound\\\">\\n        <div class=\\\"notfound\\\">\\n            <div class=\\\"notfound-404\\\">\\n                <h1>404</h1>\\n            </div>\\n            <h2>Oops! This Page Could Not Be Found</h2>\\n            <p>Sorry but the page you are looking for does not exist, have been removed. name changed or is temporarily unavailable</p>\\n            <a href=\\\"#\\\">Go To Homepage</a>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: './notfound.component.html',\n    styleUrls: ['./notfound.component.css']\n})\n\nexport class NotfoundComponent{\n    \n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ContactModel } from '../model/contacts.model';\nimport { environment } from '../../environments/environment';\n\nlet isAuth = {id:''};\nif (localStorage.length > 0) {\n    isAuth = JSON.parse(localStorage.getItem('auth'));\n}\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': (isAuth.id !== undefined) ? isAuth.id : \"\"\n    })\n};\n\n@Injectable()\n\nexport class ContactService{\n\n    _apiURL = environment.apiUrl+'/contacts';\n\n    constructor( private _httpClient: HttpClient ){}\n    \n    /**\n     * Fetch list of contacts...\n     */\n    getContacts(): Observable<ContactModel[]> {\n        return this._httpClient.get<ContactModel[]>(this._apiURL, httpOptions);  \n    }\n\n    /**\n     * Get single contact detail...\n     */\n    getContact( contactId: string ): Observable<ContactModel> {\n        return this._httpClient.get<ContactModel>(this._apiURL+'/'+contactId);\n    }\n\n    /**\n     * Add new contact to database...\n     * @param data \n     */\n    createContact(data: ContactModel): Observable<ContactModel[]> {\n        return this._httpClient.post<ContactModel[]>(this._apiURL, data, httpOptions);  \n    }\n\n    /**\n     * Update data...\n     * @param data \n     */\n    updateContact( data: ContactModel, contactId: String ): Observable<ContactModel> {\n        return this._httpClient.put<ContactModel>(this._apiURL+'/'+contactId, data, httpOptions)\n    }\n\n    /**\n     * delete contact detail...\n     */\n    deleteContact( contactId: string ): Observable<ContactModel> {\n        return this._httpClient.delete<ContactModel>(this._apiURL+'/'+contactId);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserModel } from '../model/users.model';\nimport { environment } from '../../environments/environment';\n\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': 'my-auth-token'\n    })\n};\n\n@Injectable()\n\nexport class UserService{\n\n    _apiURL = environment.apiUrl;\n\n    constructor( private _httpClient: HttpClient ){}\n\n    authenticate( username: String, password: String): Observable<any> {\n        console.log(username+' '+password);\n        return this._httpClient.post<any>(this._apiURL+'/login', {\n            username, password\n        }, httpOptions);\n    }\n        \n    getUsers(): Observable<UserModel[]> {\n        return this._httpClient.get<UserModel[]>(this._apiURL+'/users');  \n    }\n\n    /**\n     * Get single User detail...\n     */\n    getUser( userId: string ): Observable<UserModel> {\n        return this._httpClient.get<UserModel>(this._apiURL+'/users'+'/'+userId);\n    }\n\n    /**\n     * Add new User to database...\n     * @param data \n     */\n    createUser(data: UserModel): Observable<UserModel[]> {\n        return this._httpClient.post<UserModel[]>(this._apiURL+'/users', data, httpOptions);  \n    }\n\n    /**\n     * Update data...\n     * @param data \n     */\n    updateUser( data: UserModel, userId: String ): Observable<UserModel> {\n        return this._httpClient.put<UserModel>(this._apiURL+'/users'+'/'+userId, data, httpOptions)\n    }\n\n    /**\n     * delete User detail...\n     */\n    deleteUser( userId: string ): Observable<UserModel> {\n        return this._httpClient.delete<UserModel>(this._apiURL+'/users'+'/'+userId);\n    }\n\n}","module.exports = \"<navigation></navigation>\\n<div class=\\\"container\\\">\\n<div class=\\\"card\\\" style=\\\"margin-top:5%\\\">\\n<div class=\\\"card-body\\\">\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n        <div class=\\\"card-columns\\\">\\n            <div title=\\\"Add New Contact\\\" (click)=\\\"openModal('add-new')\\\" class=\\\"card bg-light\\\" style=\\\"cursor:pointer;height:88px;\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <p class=\\\"card-text\\\">\\n                    <span style=\\\"font-size:26px;\\\"><i class=\\\"fa fa-user-plus\\\"></i></span>\\n                </p>\\n              </div>\\n            </div>\\n\\n            <div *ngFor=\\\"let contact of contacts\\\" class=\\\"card bg-light\\\" id=\\\"{{contact._id}}\\\">\\n              <div (click)=\\\"loadContactDeatil(contact._id)\\\" class=\\\"card-body text-center\\\" title=\\\"Load Contact Detail\\\">\\n                <a title=\\\"Remove Contact\\\" class=\\\"user-icons remove-contact\\\" (click)=\\\"deleteContact(contact._id)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n                <p class=\\\"card-text\\\">Name: {{contact.firstname}} {{contact.lastname}}</p>\\n                <p class=\\\"card-text\\\">Phone: {{contact.phone}}</p>\\n              </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"isContactDetailEnabled\\\" class=\\\"col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <a title=\\\"Update Contact\\\" class=\\\"user-icons update-icon\\\" (click)=\\\"updateContact(contactDetail._id)\\\"><i class=\\\"fa fa-edit\\\"></i></a>\\n            <img style=\\\"width:100%;height:250px;\\\" [src]=\\\"contactDetail.image-url\\\" onError=\\\"this.src='https://www.w3schools.com/bootstrap4/img_avatar1.png'\\\"/> \\n            <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">{{contactDetail.firstname}} {{contactDetail.lastname}}</h4>\\n                <p class=\\\"card-text\\\">{{contactDetail.phone}} | {{contactDetail.email}}</p>\\n                <p class=\\\"card-text\\\">{{contactDetail.about}}</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n</div>\\n</div>\\n\\n<!-- The Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n      <div class=\\\"modal-content\\\">\\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">{{modalTitle}}</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n          <form class=\\\"form-horizontal\\\"\\n            novalidate\\n            (ngSubmit)=\\\"save(formMode)\\\"\\n            [formGroup]=\\\"contactForm\\\">  \\n\\n            <input id=\\\"contactId\\\" type=\\\"hidden\\\" value=\\\"\\\" formControlName=\\\"contactId\\\"/>\\n\\n            <!-- Firstname field code starts here -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (contactForm.get('firstName').touched ||\\n                                                              contactForm.get('firstName').dirty) &&\\n                                                              !contactForm.get('firstName').valid}\\\">\\n              <label class=\\\"col-md-2 control-label\\\"\\n                  for=\\\"fname\\\">FirstName</label>\\n              <div class=\\\"col-md-8\\\">\\n                  <input class=\\\"form-control\\\"\\n                      id=\\\"fname\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"First Name\\\"\\n                      formControlName=\\\"firstName\\\"/>\\n                  <span class=\\\"help-block\\\" *ngIf=\\\"(contactForm.get('firstName').touched ||\\n                                                  contactForm.get('firstName').dirty) &&\\n                                                  contactForm.get('firstName').errors\\\">\\n\\n                      <span *ngIf=\\\"contactForm.get('firstName').errors.required\\\">\\n                        Please enter first Name\\n                      </span>\\n                      <span *ngIf=\\\"contactForm.get('firstName').errors.minlength\\\">\\n                          Min Length is 3\\n                      </span>\\n                  </span>\\n              </div>\\n            </div>\\n            <!-- Firstname field code ends here -->\\n\\n            <!-- Lastname field code starts here -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (contactForm.get('lastName').touched ||\\n                                                              contactForm.get('lastName').dirty) &&\\n                                                              !contactForm.get('lastName').valid}\\\">\\n              <label class=\\\"col-md-2 control-label\\\" for=\\\"lname\\\">Last Name</label>\\n              <div class=\\\"col-md-8\\\">\\n                  <input class=\\\"form-control\\\"\\n                      id=\\\"lname\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"Last Name\\\"\\n                      formControlName=\\\"lastName\\\"/>\\n                  <span class=\\\"help-block\\\" *ngIf=\\\"(contactForm.get('lastName').touched ||\\n                                                  contactForm.get('lastName').dirty) &&\\n                                                  contactForm.get('lastName').errors\\\">\\n\\n                      <span *ngIf=\\\"contactForm.get('lastName').errors.required\\\">\\n                        Please enter first Name\\n                      </span>\\n                      <span *ngIf=\\\"contactForm.get('lastName').errors.minlength\\\">\\n                          Min Length should be at least 3\\n                      </span>\\n                  </span>\\n              </div>\\n            </div>\\n            <!-- Lastname field code starts here -->\\n\\n            <!-- Email field code starts here -->\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-md-2 control-label\\\" for=\\\"email\\\">Email Address</label>\\n              <div class=\\\"col-md-8\\\">\\n                  <input class=\\\"form-control\\\"\\n                      id=\\\"email\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"Email Address\\\"\\n                      formControlName=\\\"email\\\"/>\\n              </div>\\n            </div>\\n            <!-- Email field code starts here -->\\n\\n            <!-- Phone field code starts here -->\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-md-2 control-label\\\" for=\\\"phone\\\">Phone</label>\\n              <div class=\\\"col-md-8\\\">\\n                  <input class=\\\"form-control\\\"\\n                      id=\\\"phone\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"+91 98765 28433\\\"\\n                      formControlName=\\\"phone\\\"/>\\n              </div>\\n            </div>\\n            <!-- Phone field code starts here -->\\n\\n            <!-- Image url field code starts here -->\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-md-2 control-label\\\" for=\\\"image-url\\\">Image Url</label>\\n              <div class=\\\"col-md-8\\\">\\n                  <input class=\\\"form-control\\\"\\n                      id=\\\"image-url\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"Image Url\\\"\\n                      formControlName=\\\"imageUrl\\\"/>\\n              </div>\\n            </div>\\n            <!-- Image url field code starts here -->\\n\\n            <!-- About field code starts here -->\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-md-2 control-label\\\" for=\\\"about\\\">About Me</label>\\n              <div class=\\\"col-md-8\\\">\\n                  <input class=\\\"form-control\\\"\\n                      id=\\\"about\\\"\\n                      type=\\\"text\\\"\\n                      placeholder=\\\"About Me\\\"\\n                      formControlName=\\\"about\\\"/>\\n              </div>\\n            </div>\\n            <!-- Image url field code starts here -->\\n              \\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"col-md-4 col-md-offset-2\\\">\\n                <span>\\n                  <button class=\\\"btn btn-secondary\\\"\\n                        type=\\\"submit\\\"\\n                        [disabled]=\\\"!contactForm.valid\\\">\\n                      Submit\\n                  </button>\\n                </span>\\n              </div>\\n            </div>\\n          </form>\\n          </div>\\n          </div>\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"loading\\\" class=\\\"loader-container\\\"><div class=\\\"loader\\\"></div></div>\"","import { Component } from '@angular/core';\nimport { ContactService } from '../services/contacts.service';\nimport { ContactModel } from '../model/contacts.model';\nimport { Contact } from './contact.form';\nimport { Router } from '@angular/router';\n\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl} from '@angular/forms';\nimport { StaticInjector } from '@angular/core/src/di/injector';\n\ndeclare var $: any;\n@Component({\n    selector: 'manage-contacts',\n    templateUrl: './contact.component.html'\n})\n\nexport class ContactComponent{\n\n    constructor( private _contactService: ContactService, private fb: FormBuilder, private _router: Router ){}\n\n    contactForm: FormGroup;\n    contact: Contact = new Contact();\n\n    title: String = 'Contact(s) Manager';\n    contacts: ContactModel[];\n\n    loading: boolean = false;\n\n    isContactDetailEnabled: boolean = false;\n    contactDetail: ContactModel;\n\n    formMode: String = 'INSERT';\n    logedInId: String;\n    \n    modalTitle: string;\n    openModal( modelFor ){\n        this.modalTitle = (modelFor == 'update' ) ? \"Update Contact\" : \"Add New Contact\";\n        this.formMode = (modelFor == 'update' ) ? \"UPDATE\" : \"INSERT\";\n        if(this.formMode == 'INSERT'){\n            this.loadFormWithValues({});\n        }\n        $('#myModal').modal('show'); \n        return false;\n    }\n\n    closeModal(){\n        $('#myModal').modal('hide'); \n        return false;\n    }\n\n    loadContactDeatil( contactId ): void{\n        this.loading = true;\n        this._contactService.getContact(contactId).subscribe((data)=>{\n            this.contactDetail = data;\n            this.isContactDetailEnabled = true;\n            this.loading = false;\n        });\n        \n    }\n\n    updateContact(contactId){\n        console.log(contactId);\n        this.loading = true;\n        this._contactService.getContact(contactId).subscribe((data)=>{\n            this.loadFormWithValues(data);\n            this.openModal('update');\n            this.loading = false;\n        });\n        return false;\n    }\n\n    deleteContact( contactId ){\n        if(confirm(\"Are you sure to delete contact?\")) {\n            this._contactService.deleteContact(contactId).subscribe((data)=>{\n                this.getContacts();\n                this.isContactDetailEnabled = false;\n            });\n        }\n        return false;\n    }\n\n    update(){\n        this.loading = true;\n        this._contactService.updateContact({\n            '_id': this.contactForm.value.contactId,\n            'firstname': this.contactForm.value.firstName,\n            'lastname': this.contactForm.value.lastName,\n            'about': this.contactForm.value.about,\n            'email': this.contactForm.value.email,\n            'phone' : this.contactForm.value.phone,\n            'image_url': this.contactForm.value.imageUrl,\n            'user_id': this.logedInId,\n            'created_on': new Date(),\n            'last_modified': new Date()\n        }, this.contactForm.value.contactId).subscribe((data)=>{ \n            this.closeModal();\n            this.contactDetail = data;\n            this.getContacts();\n        });\n        return false;\n    }\n\n    save( mode ){\n        if(mode == 'UPDATE'){\n            this.update();\n        } else {\n            this.loading = true;\n            this._contactService.createContact({\n                '_id': 'test',\n                'firstname': this.contactForm.value.firstName,\n                'lastname': this.contactForm.value.lastName,\n                'about': this.contactForm.value.about,\n                'email': this.contactForm.value.email,\n                'phone' : this.contactForm.value.phone,\n                'image_url': this.contactForm.value.imageUrl,\n                'user_id': this.logedInId,\n                'created_on': new Date(),\n                'last_modified': new Date()\n            }).subscribe((data)=>{ \n                console.log(data); \n                this.closeModal();\n                this.getContacts();\n                this.loading = false;\n            });\n        }\n        return false;\n    }\n\n    getContacts(){\n        this.loading = true;\n        this._contactService.getContacts().subscribe((data)=>{ \n            this.contacts = data; \n            this.loading = false;\n        });\n    }\n\n    loadFormWithValues(data: any){\n        this.contactForm.patchValue({\n            contactId: data._id,\n            firstName: data.firstname,\n            lastName: data.lastname,\n            email: data.email,\n            phone: data.phone,\n            about: data.about,\n            imageUrl: data.image_url\n        });\n        return false;\n    }\n\n    ngOnInit(): void{\n       \n        if (localStorage.length > 0) {\n            let isAuth = JSON.parse(localStorage.getItem('auth'));\n            \n            if(isAuth){\n                this.logedInId = isAuth.id;\n                if(isAuth.type == 'admin'){ this._router.navigate(['/manage-user']); }\n            }\n        }\n\n        this.getContacts();\n        \n        this.contactForm = this.fb.group({\n            contactId: [''],\n            firstName : ['', [Validators.required, Validators.minLength(3)]],\n            lastName: ['', [Validators.required, Validators.maxLength(10)]],\n            email: [''],\n            phone: [''],\n            about: [''],\n            imageUrl: ['']\n        });\n    }\n}","export class Contact {\n    constructor(\n        public contactId = '',\n        public firstName = '',\n        public lastName = '',\n        public email = '',\n        public phone = '',\n        public imageUrl = '',\n        public about = ''\n    ) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}